apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "8"
    field.cattle.io/creatorId: user-4r5dt
    field.cattle.io/publicEndpoints: '[{"addresses":["192.168.114.133"],"port":80,"protocol":"HTTP","serviceName":"apache2:ingress-9ace047e4dac4f972c5f5355d04ca8fb","ingressName":"apache2:apache2","hostname":"apache2.apache2.192.168.114.133.xip.io","allNodes":true},{"addresses":["192.168.114.133"],"port":30000,"protocol":"TCP","serviceName":"apache2:apache2-nodeport","allNodes":true}]'
  creationTimestamp: "2020-04-07T02:30:22Z"
  generation: 43
  labels:
    cattle.io/creator: norman
    workload.user.cattle.io/workloadselector: deployment-apache2-apache2
  name: apache2
  namespace: apache2
  resourceVersion: "211469"
  selfLink: /apis/apps/v1/namespaces/apache2/deployments/apache2
  uid: 24a64969-22da-486c-8ad2-b1085941c8a5
spec:
  progressDeadlineSeconds: 600
  replicas: 2
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      workload.user.cattle.io/workloadselector: deployment-apache2-apache2
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cattle.io/timestamp: "2020-04-07T06:49:43Z"
        field.cattle.io/ports: '[[{"containerPort":80,"dnsName":"apache2-nodeport","hostPort":0,"kind":"NodePort","name":"httpd","protocol":"TCP","sourcePort":30000}]]'
      creationTimestamp: null
      labels:
        workload.user.cattle.io/workloadselector: deployment-apache2-apache2
    spec:
      containers:
      - image: httpd
        imagePullPolicy: Always
        name: apache2
        ports:
        - containerPort: 80
          name: httpd
          protocol: TCP
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities: {}
          privileged: false
          readOnlyRootFilesystem: false
          runAsNonRoot: false
        stdin: true
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        tty: true
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
status:
  availableReplicas: 2
  conditions:
  - lastTransitionTime: "2020-04-07T06:47:13Z"
    lastUpdateTime: "2020-04-07T06:47:13Z"
    message: Deployment has minimum availability.
    reason: MinimumReplicasAvailable
    status: "True"
    type: Available
  - lastTransitionTime: "2020-04-07T02:30:22Z"
    lastUpdateTime: "2020-04-07T06:50:02Z"
    message: ReplicaSet "apache2-59c5756c8c" has successfully progressed.
    reason: NewReplicaSetAvailable
    status: "True"
    type: Progressing
  observedGeneration: 43
  readyReplicas: 2
  replicas: 2
  updatedReplicas: 2
